/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {
        
        List<Integer> ans = new ArrayList<>();
        
        if(root==null)
            return ans;
        
        Stack<TreeNode> s = new Stack<>();
        s.push(root);
        
        while(s.isEmpty()==false)
        {
            TreeNode val = s.pop();
            ans.add(val.val);
            
            if(val.right!=null)
                s.push(val.right);
            
            if(val.left!=null)
                s.push(val.left);
        }
        
        return ans;
    }
}